<<<<<<< HEAD
{"results": [{"node": {"raw_sql": "", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "raw_orders"], "unique_id": "seed.jaffle_shop.raw_orders", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "raw_orders.csv", "original_file_path": "data/raw_orders.csv", "name": "raw_orders", "resource_type": "seed", "alias": "raw_orders", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "quote_columns": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": ""}, "error": null, "status": null, "execution_time": 0.016852378845214844, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.517266Z", "completed_at": "2020-08-27T17:51:13.532715Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.533119Z", "completed_at": "2020-08-27T17:51:13.533130Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "raw_payments"], "unique_id": "seed.jaffle_shop.raw_payments", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "raw_payments.csv", "original_file_path": "data/raw_payments.csv", "name": "raw_payments", "resource_type": "seed", "alias": "raw_payments", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "quote_columns": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": ""}, "error": null, "status": null, "execution_time": 0.007453441619873047, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.534976Z", "completed_at": "2020-08-27T17:51:13.541055Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.541328Z", "completed_at": "2020-08-27T17:51:13.541336Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "raw_customers"], "unique_id": "seed.jaffle_shop.raw_customers", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "raw_customers.csv", "original_file_path": "data/raw_customers.csv", "name": "raw_customers", "resource_type": "seed", "alias": "raw_customers", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "quote_columns": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": ""}, "error": null, "status": null, "execution_time": 0.007566213607788086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.542664Z", "completed_at": "2020-08-27T17:51:13.548841Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.549167Z", "completed_at": "2020-08-27T17:51:13.549176Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\nhack for example macro references:\n    {{ example_macro(\"abc\", \"123\") }}\n*/\n\nwith source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_orders') }}\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "staging", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "staging/stg_orders.sql", "original_file_path": "models/staging/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_orders"]], "sources": [], "depends_on": {"macros": ["macro.jaffle_shop.example_macro"], "nodes": ["seed.jaffle_shop.raw_orders"]}, "description": "", "columns": {"order_id": {"name": "order_id", "description": "", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_orders.sql", "compiled": true, "compiled_sql": "/*\nhack for example macro references:\n    \n\n    The provided args are abc and 123\n\n\n*/\n\nwith source as (\n    select * from `dbt-tests`.`dbt_alex`.`raw_orders`\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\nhack for example macro references:\n    \n\n    The provided args are abc and 123\n\n\n*/\n\nwith source as (\n    select * from `dbt-tests`.`dbt_alex`.`raw_orders`\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed"}, "error": null, "status": null, "execution_time": 0.01706719398498535, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.550665Z", "completed_at": "2020-08-27T17:51:13.566449Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.566799Z", "completed_at": "2020-08-27T17:51:13.566807Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n    \n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_payments') }}\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "staging", "stg_payments"], "unique_id": "model.jaffle_shop.stg_payments", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "staging/stg_payments.sql", "original_file_path": "models/staging/stg_payments.sql", "name": "stg_payments", "resource_type": "model", "alias": "stg_payments", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_payments"]}, "description": "", "columns": {"payment_id": {"name": "payment_id", "description": "", "meta": {}, "data_type": null, "tags": ["billing"]}, "payment_method": {"name": "payment_method", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {"owner": "@drew", "contains_pii": true, "SLA": "1 hour"}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_payments.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from `dbt-tests`.`dbt_alex`.`raw_payments`\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from `dbt-tests`.`dbt_alex`.`raw_payments`\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed"}, "error": null, "status": null, "execution_time": 0.009598970413208008, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.568330Z", "completed_at": "2020-08-27T17:51:13.576822Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.577126Z", "completed_at": "2020-08-27T17:51:13.577133Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_customers') }}\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "staging", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "staging/stg_customers.sql", "original_file_path": "models/staging/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_customers"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_customers"]}, "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_customers.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from `dbt-tests`.`dbt_alex`.`raw_customers`\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from `dbt-tests`.`dbt_alex`.`raw_customers`\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed"}, "error": null, "status": null, "execution_time": 0.009406566619873047, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.578489Z", "completed_at": "2020-08-27T17:51:13.586549Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.586843Z", "completed_at": "2020-08-27T17:51:13.586850Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_orders"], "unique_id": "model.jaffle_shop.customer_orders", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "marts/core/intermediate/customer_orders.sql", "original_file_path": "models/marts/core/intermediate/customer_orders.sql", "name": "customer_orders", "resource_type": "model", "alias": "customer_orders", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/intermediate/customer_orders.sql", "compiled": true, "compiled_sql": "with orders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with orders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.008830785751342773, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.588160Z", "completed_at": "2020-08-27T17:51:13.595737Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.596038Z", "completed_at": "2020-08-27T17:51:13.596046Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select count(*) from {{ ref('stg_orders') }}", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "analysis", "my_analysis"], "unique_id": "analysis.jaffle_shop.my_analysis", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "analysis/my_analysis.sql", "original_file_path": "analysis/my_analysis.sql", "name": "my_analysis", "resource_type": "analysis", "alias": "my_analysis", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "Here are the docs for my really cool analysis", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "analysis/analysis.yml", "build_path": "target/compiled/jaffle_shop/analysis/my_analysis.sql", "compiled": true, "compiled_sql": "select count(*) from `dbt-tests`.`dbt_alex`.`stg_orders`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select count(*) from `dbt-tests`.`dbt_alex`.`stg_orders`"}, "error": null, "status": null, "execution_time": 0.013177633285522461, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.597323Z", "completed_at": "2020-08-27T17:51:13.609229Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.609540Z", "completed_at": "2020-08-27T17:51:13.609547Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- hack for DAG viz\n-- {{ source('payments', 'orders') }}\n\nselect * from {{ ref('stg_orders') }}", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "staging", "hidden_model"], "unique_id": "model.jaffle_shop.hidden_model", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "staging/hidden_model.sql", "original_file_path": "models/staging/hidden_model.sql", "name": "hidden_model", "resource_type": "model", "alias": "hidden_model", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["stg_orders"]], "sources": [["payments", "orders"]], "depends_on": {"macros": [], "nodes": ["source.jaffle_shop.payments.orders", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": false}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/hidden_model.sql", "compiled": true, "compiled_sql": "-- hack for DAG viz\n-- `dbt-tests`.`dbt_alex`.`raw_orders`\n\nselect * from `dbt-tests`.`dbt_alex`.`stg_orders`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- hack for DAG viz\n-- `dbt-tests`.`dbt_alex`.`raw_orders`\n\nselect * from `dbt-tests`.`dbt_alex`.`stg_orders`"}, "error": null, "status": null, "execution_time": 0.010066032409667969, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.610776Z", "completed_at": "2020-08-27T17:51:13.619719Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.619994Z", "completed_at": "2020-08-27T17:51:13.620001Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('stg_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.01859593391418457, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.621064Z", "completed_at": "2020-08-27T17:51:13.638539Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.638869Z", "completed_at": "2020-08-27T17:51:13.638877Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select * from {{ ref('stg_orders') }}", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "data_test", "example_data_test"], "unique_id": "test.jaffle_shop.example_data_test", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "data_test/example_data_test.sql", "original_file_path": "tests/example_data_test.sql", "name": "example_data_test", "resource_type": "test", "alias": "example_data_test", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["data"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/tests/example_data_test.sql", "compiled": true, "compiled_sql": "select * from `dbt-tests`.`dbt_alex`.`stg_orders`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select * from `dbt-tests`.`dbt_alex`.`stg_orders`"}, "error": null, "status": null, "execution_time": 0.013801813125610352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.640002Z", "completed_at": "2020-08-27T17:51:13.652528Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.652826Z", "completed_at": "2020-08-27T17:51:13.652833Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`stg_orders`\nwhere order_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`stg_orders`\nwhere order_id is null\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.010593891143798828, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.653973Z", "completed_at": "2020-08-27T17:51:13.663537Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.663887Z", "completed_at": "2020-08-27T17:51:13.663896Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `dbt-tests`.`dbt_alex`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `dbt-tests`.`dbt_alex`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.009815454483032227, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.664986Z", "completed_at": "2020-08-27T17:51:13.673813Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.674123Z", "completed_at": "2020-08-27T17:51:13.674130Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_payments"], "unique_id": "model.jaffle_shop.customer_payments", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "marts/core/intermediate/customer_payments.sql", "original_file_path": "models/marts/core/intermediate/customer_payments.sql", "name": "customer_payments", "resource_type": "model", "alias": "customer_payments", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/intermediate/customer_payments.sql", "compiled": true, "compiled_sql": "with payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_payments`\n\n),\n\norders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_payments`\n\n),\n\norders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.009933233261108398, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.675323Z", "completed_at": "2020-08-27T17:51:13.684013Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.684327Z", "completed_at": "2020-08-27T17:51:13.684334Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        {% for payment_method in payment_methods -%}\n        sum(case when payment_method = '{{payment_method}}' then amount else 0 end) as {{payment_method}}_amount,\n        {% endfor -%}\n\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "order_payments"], "unique_id": "model.jaffle_shop.order_payments", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "marts/core/intermediate/order_payments.sql", "original_file_path": "models/marts/core/intermediate/order_payments.sql", "name": "order_payments", "resource_type": "model", "alias": "order_payments", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/intermediate/order_payments.sql", "compiled": true, "compiled_sql": "\n\nwith payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_payments`\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_payments`\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.009886980056762695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.685623Z", "completed_at": "2020-08-27T17:51:13.694402Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.694669Z", "completed_at": "2020-08-27T17:51:13.694677Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method", "model": "{{ ref('stg_payments') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card"], "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "resource_type": "test", "alias": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from `dbt-tests`.`dbt_alex`.`stg_payments`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from `dbt-tests`.`dbt_alex`.`stg_payments`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n", "column_name": "payment_method"}, "error": null, "status": null, "execution_time": 0.011897802352905273, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.696204Z", "completed_at": "2020-08-27T17:51:13.706773Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.707136Z", "completed_at": "2020-08-27T17:51:13.707144Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "payment_id", "model": "{{ ref('stg_payments') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_payments_payment_id", "resource_type": "test", "alias": "not_null_stg_payments_payment_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["billing", "schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_payments_payment_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`stg_payments`\nwhere payment_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`stg_payments`\nwhere payment_id is null\n\n", "column_name": "payment_id"}, "error": null, "status": null, "execution_time": 0.010194063186645508, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.708320Z", "completed_at": "2020-08-27T17:51:13.717363Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.717679Z", "completed_at": "2020-08-27T17:51:13.717686Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "payment_id", "model": "{{ ref('stg_payments') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "unique_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/unique_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_payments_payment_id", "resource_type": "test", "alias": "unique_stg_payments_payment_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["billing", "schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_payments_payment_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from `dbt-tests`.`dbt_alex`.`stg_payments`\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from `dbt-tests`.`dbt_alex`.`stg_payments`\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "payment_id"}, "error": null, "status": null, "execution_time": 0.011502504348754883, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.718822Z", "completed_at": "2020-08-27T17:51:13.729182Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.729575Z", "completed_at": "2020-08-27T17:51:13.729594Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`stg_customers`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`stg_customers`\nwhere customer_id is null\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.011188983917236328, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.730845Z", "completed_at": "2020-08-27T17:51:13.740965Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.741315Z", "completed_at": "2020-08-27T17:51:13.741322Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-tests`.`dbt_alex`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-tests`.`dbt_alex`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.010507822036743164, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.742457Z", "completed_at": "2020-08-27T17:51:13.751750Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.752089Z", "completed_at": "2020-08-27T17:51:13.752097Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\ncustomer_orders as (\n\n    select * from {{ ref('customer_orders') }}\n\n),\n\ncustomer_payments as (\n\n    select * from {{ ref('customer_payments') }}\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "marts", "core", "dim_customers"], "unique_id": "model.jaffle_shop.dim_customers", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "marts/core/dim_customers.sql", "original_file_path": "models/marts/core/dim_customers.sql", "name": "dim_customers", "resource_type": "model", "alias": "dim_customers", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_customers"], ["customer_orders"], ["customer_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.customer_orders", "model.jaffle_shop.customer_payments"]}, "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders", "columns": {"customer_id": {"name": "customer_id", "description": "This is a unique identifier for a customer", "meta": {}, "data_type": null, "tags": []}, "first_name": {"name": "first_name", "description": "Customer's first name. PII.", "meta": {}, "data_type": null, "tags": []}, "last_name": {"name": "last_name", "description": "Customer's last name. PII.", "meta": {}, "data_type": null, "tags": []}, "email": {"name": "email", "description": "Customer's email address. PII.", "meta": {}, "data_type": null, "tags": []}, "first_order": {"name": "first_order", "description": "Date (UTC) of a customer's first order", "meta": {}, "data_type": null, "tags": []}, "most_recent_order": {"name": "most_recent_order", "description": "Date (UTC) of a customer's most recent order", "meta": {}, "data_type": null, "tags": []}, "number_of_orders": {"name": "number_of_orders", "description": "Count of the number of orders a customer has placed", "meta": {}, "data_type": null, "tags": []}, "total_order_amount": {"name": "total_order_amount", "description": "Total value (AUD) of a customer's orders", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/models/marts/core/dim_customers.sql", "compiled": true, "compiled_sql": "with customers as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_customers`\n\n),\n\ncustomer_orders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`customer_orders`\n\n),\n\ncustomer_payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`customer_payments`\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_customers`\n\n),\n\ncustomer_orders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`customer_orders`\n\n),\n\ncustomer_payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`customer_payments`\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.013919830322265625, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.753298Z", "completed_at": "2020-08-27T17:51:13.766029Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.766388Z", "completed_at": "2020-08-27T17:51:13.766397Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\norder_payments as (\n\n    select * from {{ ref('order_payments') }}\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        {% for payment_method in payment_methods -%}\n\n        order_payments.{{payment_method}}_amount,\n\n        {% endfor -%}\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "marts", "core", "fct_orders"], "unique_id": "model.jaffle_shop.fct_orders", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "marts/core/fct_orders.sql", "original_file_path": "models/marts/core/fct_orders.sql", "name": "fct_orders", "resource_type": "model", "alias": "fct_orders", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"], ["order_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.order_payments"]}, "description": "This table has basic information about orders, as well as some derived facts based on payments", "columns": {"order_id": {"name": "order_id", "description": "This is a unique identifier for an order", "meta": {}, "data_type": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Foreign key to the customers table", "meta": {}, "data_type": null, "tags": []}, "order_date": {"name": "order_date", "description": "Date (UTC) that the order was placed", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |", "meta": {}, "data_type": null, "tags": []}, "amount": {"name": "amount", "description": "Total amount (AUD) of the order", "meta": {}, "data_type": null, "tags": []}, "credit_card_amount": {"name": "credit_card_amount", "description": "Amount of the order (AUD) paid for by credit card", "meta": {}, "data_type": null, "tags": []}, "coupon_amount": {"name": "coupon_amount", "description": "Amount of the order (AUD) paid for by coupon", "meta": {}, "data_type": null, "tags": []}, "bank_transfer_amount": {"name": "bank_transfer_amount", "description": "Amount of the order (AUD) paid for by bank transfer", "meta": {}, "data_type": null, "tags": []}, "gift_card_amount": {"name": "gift_card_amount", "description": "Amount of the order (AUD) paid for by gift card", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/models/marts/core/fct_orders.sql", "compiled": true, "compiled_sql": "\n\nwith orders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\norder_payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`order_payments`\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith orders as (\n\n    select * from `dbt-tests`.`dbt_alex`.`stg_orders`\n\n),\n\norder_payments as (\n\n    select * from `dbt-tests`.`dbt_alex`.`order_payments`\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.013825416564941406, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.767901Z", "completed_at": "2020-08-27T17:51:13.780359Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.780685Z", "completed_at": "2020-08-27T17:51:13.780693Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('dim_customers') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_dim_customers_customer_id", "resource_type": "test", "alias": "not_null_dim_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_dim_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`dim_customers`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`dim_customers`\nwhere customer_id is null\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.010648012161254883, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.782526Z", "completed_at": "2020-08-27T17:51:13.791623Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.791929Z", "completed_at": "2020-08-27T17:51:13.791937Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('dim_customers') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "unique_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/unique_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_dim_customers_customer_id", "resource_type": "test", "alias": "unique_dim_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/unique_dim_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-tests`.`dbt_alex`.`dim_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-tests`.`dbt_alex`.`dim_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.010086536407470703, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.792954Z", "completed_at": "2020-08-27T17:51:13.801924Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.802255Z", "completed_at": "2020-08-27T17:51:13.802262Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/marts/core/schema.yml", "name": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `dbt-tests`.`dbt_alex`.`fct_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `dbt-tests`.`dbt_alex`.`fct_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.011940240859985352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.803456Z", "completed_at": "2020-08-27T17:51:13.814317Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.814647Z", "completed_at": "2020-08-27T17:51:13.814655Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "amount", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_amount", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_amount", "resource_type": "test", "alias": "not_null_fct_orders_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere amount is null\n\n", "column_name": "amount"}, "error": null, "status": null, "execution_time": 0.010394811630249023, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.815806Z", "completed_at": "2020-08-27T17:51:13.825033Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.825374Z", "completed_at": "2020-08-27T17:51:13.825382Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "bank_transfer_amount", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_bank_transfer_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_bank_transfer_amount", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_bank_transfer_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_bank_transfer_amount", "resource_type": "test", "alias": "not_null_fct_orders_bank_transfer_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_bank_transfer_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere bank_transfer_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere bank_transfer_amount is null\n\n", "column_name": "bank_transfer_amount"}, "error": null, "status": null, "execution_time": 0.011347055435180664, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.826529Z", "completed_at": "2020-08-27T17:51:13.836829Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.837164Z", "completed_at": "2020-08-27T17:51:13.837172Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "coupon_amount", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_coupon_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_coupon_amount", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_coupon_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_coupon_amount", "resource_type": "test", "alias": "not_null_fct_orders_coupon_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_coupon_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere coupon_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere coupon_amount is null\n\n", "column_name": "coupon_amount"}, "error": null, "status": null, "execution_time": 0.009958505630493164, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.838207Z", "completed_at": "2020-08-27T17:51:13.847130Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.847480Z", "completed_at": "2020-08-27T17:51:13.847487Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "credit_card_amount", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_credit_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_credit_card_amount", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_credit_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_credit_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_credit_card_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_credit_card_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere credit_card_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere credit_card_amount is null\n\n", "column_name": "credit_card_amount"}, "error": null, "status": null, "execution_time": 0.010356664657592773, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.848557Z", "completed_at": "2020-08-27T17:51:13.857910Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.858245Z", "completed_at": "2020-08-27T17:51:13.858253Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_customer_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_customer_id", "resource_type": "test", "alias": "not_null_fct_orders_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere customer_id is null\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.010148048400878906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.859325Z", "completed_at": "2020-08-27T17:51:13.868415Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.868788Z", "completed_at": "2020-08-27T17:51:13.868796Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "gift_card_amount", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_gift_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_gift_card_amount", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_gift_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_gift_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_gift_card_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_gift_card_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere gift_card_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere gift_card_amount is null\n\n", "column_name": "gift_card_amount"}, "error": null, "status": null, "execution_time": 0.009886741638183594, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.869850Z", "completed_at": "2020-08-27T17:51:13.878732Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.879049Z", "completed_at": "2020-08-27T17:51:13.879057Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_order_id", "resource_type": "test", "alias": "not_null_fct_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere order_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom `dbt-tests`.`dbt_alex`.`fct_orders`\nwhere order_id is null\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.01007390022277832, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.880131Z", "completed_at": "2020-08-27T17:51:13.889137Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.889457Z", "completed_at": "2020-08-27T17:51:13.889464Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('dim_customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_"], "unique_id": "test.jaffle_shop.relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "original_file_path": "models/marts/core/schema.yml", "name": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "resource_type": "test", "alias": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"], ["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.jaffle_shop.dim_customers", "model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*) as validation_errors\nfrom (\n    select customer_id as id from `dbt-tests`.`dbt_alex`.`fct_orders`\n) as child\nleft join (\n    select customer_id as id from `dbt-tests`.`dbt_alex`.`dim_customers`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*) as validation_errors\nfrom (\n    select customer_id as id from `dbt-tests`.`dbt_alex`.`fct_orders`\n) as child\nleft join (\n    select customer_id as id from `dbt-tests`.`dbt_alex`.`dim_customers`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.011767387390136719, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.890511Z", "completed_at": "2020-08-27T17:51:13.901290Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.901600Z", "completed_at": "2020-08-27T17:51:13.901607Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('fct_orders') }}"}}, "database": "dbt-tests", "schema": "dbt_alex", "fqn": ["jaffle_shop", "schema_test", "unique_fct_orders_order_id"], "unique_id": "test.jaffle_shop.unique_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/nobody99/Desktop/dbt-docs/ci-project", "path": "schema_test/unique_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_fct_orders_order_id", "resource_type": "test", "alias": "unique_fct_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/unique_fct_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `dbt-tests`.`dbt_alex`.`fct_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `dbt-tests`.`dbt_alex`.`fct_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.010108470916748047, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-27T17:51:13.902654Z", "completed_at": "2020-08-27T17:51:13.911619Z"}, {"name": "execute", "started_at": "2020-08-27T17:51:13.911953Z", "completed_at": "2020-08-27T17:51:13.911960Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-08-27T17:51:13.925774Z", "elapsed_time": 1.250741720199585}
=======
{"results": [{"node": {"raw_sql": "", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "raw_payments"], "unique_id": "seed.jaffle_shop.raw_payments", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "raw_payments.csv", "original_file_path": "data/raw_payments.csv", "name": "raw_payments", "resource_type": "seed", "alias": "raw_payments", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/drew/fishtown/dbt-docs/ci-project/data/raw_payments.csv"}, "error": null, "status": null, "execution_time": 0.028706789016723633, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.082333Z", "completed_at": "2020-03-04T16:18:41.099897Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.108924Z", "completed_at": "2020-03-04T16:18:41.108940Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "raw_orders"], "unique_id": "seed.jaffle_shop.raw_orders", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "raw_orders.csv", "original_file_path": "data/raw_orders.csv", "name": "raw_orders", "resource_type": "seed", "alias": "raw_orders", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/drew/fishtown/dbt-docs/ci-project/data/raw_orders.csv"}, "error": null, "status": null, "execution_time": 0.02939295768737793, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.082199Z", "completed_at": "2020-03-04T16:18:41.102444Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.109194Z", "completed_at": "2020-03-04T16:18:41.109199Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "raw_customers"], "unique_id": "seed.jaffle_shop.raw_customers", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "raw_customers.csv", "original_file_path": "data/raw_customers.csv", "name": "raw_customers", "resource_type": "seed", "alias": "raw_customers", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/drew/fishtown/dbt-docs/ci-project/data/raw_customers.csv"}, "error": null, "status": null, "execution_time": 0.028959035873413086, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.082459Z", "completed_at": "2020-03-04T16:18:41.108624Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.109442Z", "completed_at": "2020-03-04T16:18:41.109447Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n    \n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_payments') }}\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "staging", "stg_payments"], "unique_id": "model.jaffle_shop.stg_payments", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "staging/stg_payments.sql", "original_file_path": "models/staging/stg_payments.sql", "name": "stg_payments", "resource_type": "model", "alias": "stg_payments", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_payments"]}, "description": "", "columns": {"payment_id": {"name": "payment_id", "description": "", "meta": {}, "data_type": null, "tags": ["billing"]}, "payment_method": {"name": "payment_method", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {"owner": "@drew", "contains_pii": true, "SLA": "1 hour"}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/stg_payments.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"analytics\".\"test_schema\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"analytics\".\"test_schema\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.023916006088256836, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.124398Z", "completed_at": "2020-03-04T16:18:41.147068Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.147363Z", "completed_at": "2020-03-04T16:18:41.147372Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_customers') }}\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "staging", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "staging/stg_customers.sql", "original_file_path": "models/staging/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_customers"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_customers"]}, "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/stg_customers.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"analytics\".\"test_schema\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"analytics\".\"test_schema\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.018426179885864258, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.130782Z", "completed_at": "2020-03-04T16:18:41.148073Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.148323Z", "completed_at": "2020-03-04T16:18:41.148328Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\nhack for example macro references:\n    {{ example_macro(\"abc\", \"123\") }}\n*/\n\nwith source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_orders') }}\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "staging", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "staging/stg_orders.sql", "original_file_path": "models/staging/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_orders"]], "sources": [], "depends_on": {"macros": ["macro.jaffle_shop.example_macro"], "nodes": ["seed.jaffle_shop.raw_orders"]}, "description": "", "columns": {"order_id": {"name": "order_id", "description": "", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/stg_orders.sql", "compiled": true, "compiled_sql": "/*\nhack for example macro references:\n    \n\n    The provided args are abc and 123\n\n\n*/\n\nwith source as (\n    select * from \"analytics\".\"test_schema\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\nhack for example macro references:\n    \n\n    The provided args are abc and 123\n\n\n*/\n\nwith source as (\n    select * from \"analytics\".\"test_schema\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.049275875091552734, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.111797Z", "completed_at": "2020-03-04T16:18:41.156469Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.159082Z", "completed_at": "2020-03-04T16:18:41.159088Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        {% for payment_method in payment_methods -%}\n        sum(case when payment_method = '{{payment_method}}' then amount else 0 end) as {{payment_method}}_amount,\n        {% endfor -%}\n\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "order_payments"], "unique_id": "model.jaffle_shop.order_payments", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "marts/core/intermediate/order_payments.sql", "original_file_path": "models/marts/core/intermediate/order_payments.sql", "name": "order_payments", "resource_type": "model", "alias": "order_payments", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/marts/core/intermediate/order_payments.sql", "compiled": true, "compiled_sql": "\n\nwith payments as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith payments as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.0377042293548584, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.149793Z", "completed_at": "2020-03-04T16:18:41.161951Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.179034Z", "completed_at": "2020-03-04T16:18:41.179041Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('stg_payments'), column_name='payment_method', values=['credit_card', 'coupon', 'bank_transfer', 'gift_card']) }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card"], "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "resource_type": "test", "alias": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "payment_method", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method"}}}, "error": null, "status": null, "execution_time": 0.06360602378845215, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.161630Z", "completed_at": "2020-03-04T16:18:41.189513Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.217771Z", "completed_at": "2020-03-04T16:18:41.217779Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_customers'), column_name='customer_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_stg_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_customers\"\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_customers\"\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_customers\"\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.07794475555419922, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.178879Z", "completed_at": "2020-03-04T16:18:41.218427Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.220737Z", "completed_at": "2020-03-04T16:18:41.220743Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_payments'), column_name='payment_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_payments_payment_id", "resource_type": "test", "alias": "not_null_stg_payments_payment_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["billing", "schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_stg_payments_payment_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_payments\"\nwhere payment_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_payments\"\nwhere payment_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_payments\"\nwhere payment_id is null\n\n", "column_name": "payment_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "payment_id"}}}, "error": null, "status": null, "execution_time": 0.07832598686218262, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.179291Z", "completed_at": "2020-03-04T16:18:41.219655Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.236476Z", "completed_at": "2020-03-04T16:18:41.236485Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_payments'), column_name='payment_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "unique_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/unique_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_payments_payment_id", "resource_type": "test", "alias": "unique_stg_payments_payment_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["billing", "schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_stg_payments_payment_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        payment_id\n\n    from \"analytics\".\"test_schema\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        payment_id\n\n    from \"analytics\".\"test_schema\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        payment_id\n\n    from \"analytics\".\"test_schema\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "payment_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "payment_id"}}}, "error": null, "status": null, "execution_time": 0.07771015167236328, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.179518Z", "completed_at": "2020-03-04T16:18:41.219958Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.236752Z", "completed_at": "2020-03-04T16:18:41.236757Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_customers'), column_name='customer_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_stg_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"analytics\".\"test_schema\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"analytics\".\"test_schema\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"analytics\".\"test_schema\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.0791170597076416, "thread_id": "Thread-8", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.179409Z", "completed_at": "2020-03-04T16:18:41.220452Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.237268Z", "completed_at": "2020-03-04T16:18:41.237275Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_payments"], "unique_id": "model.jaffle_shop.customer_payments", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "marts/core/intermediate/customer_payments.sql", "original_file_path": "models/marts/core/intermediate/customer_payments.sql", "name": "customer_payments", "resource_type": "model", "alias": "customer_payments", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/marts/core/intermediate/customer_payments.sql", "compiled": true, "compiled_sql": "with payments as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\norders as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with payments as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_payments\"\n\n),\n\norders as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.07593822479248047, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.219072Z", "completed_at": "2020-03-04T16:18:41.239111Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.253802Z", "completed_at": "2020-03-04T16:18:41.253810Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_orders"], "unique_id": "model.jaffle_shop.customer_orders", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "marts/core/intermediate/customer_orders.sql", "original_file_path": "models/marts/core/intermediate/customer_orders.sql", "name": "customer_orders", "resource_type": "model", "alias": "customer_orders", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/marts/core/intermediate/customer_orders.sql", "compiled": true, "compiled_sql": "with orders as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with orders as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.07678675651550293, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.218745Z", "completed_at": "2020-03-04T16:18:41.239629Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.254209Z", "completed_at": "2020-03-04T16:18:41.254214Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select count(*) from {{ ref('stg_orders') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "analysis", "my_analysis"], "unique_id": "analysis.jaffle_shop.my_analysis", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "analysis/my_analysis.sql", "original_file_path": "analysis/my_analysis.sql", "name": "my_analysis", "resource_type": "analysis", "alias": "my_analysis", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "Here are the docs for my really cool analysis", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "analysis/analysis.yml", "build_path": "target/compiled/jaffle_shop/analysis/my_analysis.sql", "compiled": true, "compiled_sql": "select count(*) from \"analytics\".\"test_schema\".\"stg_orders\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select count(*) from \"analytics\".\"test_schema\".\"stg_orders\"", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.04886889457702637, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.238174Z", "completed_at": "2020-03-04T16:18:41.256572Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.266594Z", "completed_at": "2020-03-04T16:18:41.266600Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- hack for DAG viz\n-- {{ source('payments', 'orders') }}\n\nselect * from {{ ref('stg_orders') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "staging", "hidden_model"], "unique_id": "model.jaffle_shop.hidden_model", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "staging/hidden_model.sql", "original_file_path": "models/staging/hidden_model.sql", "name": "hidden_model", "resource_type": "model", "alias": "hidden_model", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["stg_orders"]], "sources": [["payments", "orders"]], "depends_on": {"macros": [], "nodes": ["source.jaffle_shop.payments.orders", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": false}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/hidden_model.sql", "compiled": true, "compiled_sql": "-- hack for DAG viz\n-- \"analytics\".\"test_schema\".\"raw_orders\"\n\nselect * from \"analytics\".\"test_schema\".\"stg_orders\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- hack for DAG viz\n-- \"analytics\".\"test_schema\".\"raw_orders\"\n\nselect * from \"analytics\".\"test_schema\".\"stg_orders\"", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.06454110145568848, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.256049Z", "completed_at": "2020-03-04T16:18:41.268427Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.293780Z", "completed_at": "2020-03-04T16:18:41.293788Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select * from {{ ref('stg_orders') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "data_test", "example_data_test"], "unique_id": "test.jaffle_shop.example_data_test", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "data_test/example_data_test.sql", "original_file_path": "tests/example_data_test.sql", "name": "example_data_test", "resource_type": "test", "alias": "example_data_test", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["data"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/data_test/example_data_test.sql", "compiled": true, "compiled_sql": "select * from \"analytics\".\"test_schema\".\"stg_orders\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select * from \"analytics\".\"test_schema\".\"stg_orders\"", "wrapped_sql": "select count(*) as errors from (\nselect * from \"analytics\".\"test_schema\".\"stg_orders\"\n) sbq", "column_name": null, "test_metadata": null}, "error": null, "status": null, "execution_time": 0.11469173431396484, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.267087Z", "completed_at": "2020-03-04T16:18:41.303186Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.366538Z", "completed_at": "2020-03-04T16:18:41.366548Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('stg_orders'), column_name='status', values=['placed', 'shipped', 'completed', 'return_pending', 'returned']) }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "status", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status"}}}, "error": null, "status": null, "execution_time": 0.11591911315917969, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.266972Z", "completed_at": "2020-03-04T16:18:41.303512Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.368167Z", "completed_at": "2020-03-04T16:18:41.368173Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_orders'), column_name='order_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_stg_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_orders\"\nwhere order_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_orders\"\nwhere order_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"stg_orders\"\nwhere order_id is null\n\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.11564803123474121, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.267197Z", "completed_at": "2020-03-04T16:18:41.304056Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.368666Z", "completed_at": "2020-03-04T16:18:41.368672Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_orders'), column_name='order_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_stg_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"analytics\".\"test_schema\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"analytics\".\"test_schema\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"analytics\".\"test_schema\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.11456704139709473, "thread_id": "Thread-8", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.268691Z", "completed_at": "2020-03-04T16:18:41.366209Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.369144Z", "completed_at": "2020-03-04T16:18:41.369151Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\norder_payments as (\n\n    select * from {{ ref('order_payments') }}\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        {% for payment_method in payment_methods -%}\n\n        order_payments.{{payment_method}}_amount,\n\n        {% endfor -%}\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "marts", "core", "fct_orders"], "unique_id": "model.jaffle_shop.fct_orders", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "marts/core/fct_orders.sql", "original_file_path": "models/marts/core/fct_orders.sql", "name": "fct_orders", "resource_type": "model", "alias": "fct_orders", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"], ["order_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.order_payments"]}, "description": "This table has basic information about orders, as well as some derived facts based on payments", "columns": {"order_id": {"name": "order_id", "description": "This is a unique identifier for an order", "meta": {}, "data_type": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Foreign key to the customers table", "meta": {}, "data_type": null, "tags": []}, "order_date": {"name": "order_date", "description": "Date (UTC) that the order was placed", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |", "meta": {}, "data_type": null, "tags": []}, "amount": {"name": "amount", "description": "Total amount (AUD) of the order", "meta": {}, "data_type": null, "tags": []}, "credit_card_amount": {"name": "credit_card_amount", "description": "Amount of the order (AUD) paid for by credit card", "meta": {}, "data_type": null, "tags": []}, "coupon_amount": {"name": "coupon_amount", "description": "Amount of the order (AUD) paid for by coupon", "meta": {}, "data_type": null, "tags": []}, "bank_transfer_amount": {"name": "bank_transfer_amount", "description": "Amount of the order (AUD) paid for by bank transfer", "meta": {}, "data_type": null, "tags": []}, "gift_card_amount": {"name": "gift_card_amount", "description": "Amount of the order (AUD) paid for by gift card", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/marts/core/fct_orders.sql", "compiled": true, "compiled_sql": "\n\nwith orders as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\norder_payments as (\n\n    select * from \"analytics\".\"test_schema\".\"order_payments\"\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith orders as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_orders\"\n\n),\n\norder_payments as (\n\n    select * from \"analytics\".\"test_schema\".\"order_payments\"\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.10610604286193848, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.302653Z", "completed_at": "2020-03-04T16:18:41.370029Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.372117Z", "completed_at": "2020-03-04T16:18:41.372123Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\ncustomer_orders as (\n\n    select * from {{ ref('customer_orders') }}\n\n),\n\ncustomer_payments as (\n\n    select * from {{ ref('customer_payments') }}\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "marts", "core", "dim_customers"], "unique_id": "model.jaffle_shop.dim_customers", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "marts/core/dim_customers.sql", "original_file_path": "models/marts/core/dim_customers.sql", "name": "dim_customers", "resource_type": "model", "alias": "dim_customers", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_customers"], ["customer_orders"], ["customer_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.customer_orders", "model.jaffle_shop.customer_payments"]}, "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders", "columns": {"customer_id": {"name": "customer_id", "description": "This is a unique identifier for a customer", "meta": {}, "data_type": null, "tags": []}, "first_name": {"name": "first_name", "description": "Customer's first name. PII.", "meta": {}, "data_type": null, "tags": []}, "last_name": {"name": "last_name", "description": "Customer's last name. PII.", "meta": {}, "data_type": null, "tags": []}, "email": {"name": "email", "description": "Customer's email address. PII.", "meta": {}, "data_type": null, "tags": []}, "first_order": {"name": "first_order", "description": "Date (UTC) of a customer's first order", "meta": {}, "data_type": null, "tags": []}, "most_recent_order": {"name": "most_recent_order", "description": "Date (UTC) of a customer's most recent order", "meta": {}, "data_type": null, "tags": []}, "number_of_orders": {"name": "number_of_orders", "description": "Count of the number of orders a customer has placed", "meta": {}, "data_type": null, "tags": []}, "total_order_amount": {"name": "total_order_amount", "description": "Total value (AUD) of a customer's orders", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/marts/core/dim_customers.sql", "compiled": true, "compiled_sql": "with customers as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_customers\"\n\n),\n\ncustomer_orders as (\n\n    select * from \"analytics\".\"test_schema\".\"customer_orders\"\n\n),\n\ncustomer_payments as (\n\n    select * from \"analytics\".\"test_schema\".\"customer_payments\"\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select * from \"analytics\".\"test_schema\".\"stg_customers\"\n\n),\n\ncustomer_orders as (\n\n    select * from \"analytics\".\"test_schema\".\"customer_orders\"\n\n),\n\ncustomer_payments as (\n\n    select * from \"analytics\".\"test_schema\".\"customer_payments\"\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.10607385635375977, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.303019Z", "completed_at": "2020-03-04T16:18:41.371729Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.372914Z", "completed_at": "2020-03-04T16:18:41.372921Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('fct_orders'), column_name='status', values=['placed', 'shipped', 'completed', 'return_pending', 'returned']) }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/marts/core/schema.yml", "name": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"analytics\".\"test_schema\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"analytics\".\"test_schema\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"analytics\".\"test_schema\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "status", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status"}}}, "error": null, "status": null, "execution_time": 0.08230304718017578, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.378286Z", "completed_at": "2020-03-04T16:18:41.425229Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.454961Z", "completed_at": "2020-03-04T16:18:41.454971Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('dim_customers'), column_name='customer_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_dim_customers_customer_id", "resource_type": "test", "alias": "not_null_dim_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_dim_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"dim_customers\"\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"dim_customers\"\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"dim_customers\"\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.08268404006958008, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.379319Z", "completed_at": "2020-03-04T16:18:41.434279Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.455716Z", "completed_at": "2020-03-04T16:18:41.455723Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='amount') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_amount", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_amount", "resource_type": "test", "alias": "not_null_fct_orders_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere amount is null\n\n", "column_name": "amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "amount"}}}, "error": null, "status": null, "execution_time": 0.08331704139709473, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.391041Z", "completed_at": "2020-03-04T16:18:41.455342Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.457591Z", "completed_at": "2020-03-04T16:18:41.457597Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='bank_transfer_amount') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_bank_transfer_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_bank_transfer_amount", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_bank_transfer_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_bank_transfer_amount", "resource_type": "test", "alias": "not_null_fct_orders_bank_transfer_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_bank_transfer_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n", "column_name": "bank_transfer_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "bank_transfer_amount"}}}, "error": null, "status": null, "execution_time": 0.08379530906677246, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.391174Z", "completed_at": "2020-03-04T16:18:41.455947Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.458480Z", "completed_at": "2020-03-04T16:18:41.458487Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='coupon_amount') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_coupon_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_coupon_amount", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_coupon_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_coupon_amount", "resource_type": "test", "alias": "not_null_fct_orders_coupon_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_coupon_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere coupon_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere coupon_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere coupon_amount is null\n\n", "column_name": "coupon_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "coupon_amount"}}}, "error": null, "status": null, "execution_time": 0.08389139175415039, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.400533Z", "completed_at": "2020-03-04T16:18:41.456383Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.459007Z", "completed_at": "2020-03-04T16:18:41.459012Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='credit_card_amount') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_credit_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_credit_card_amount", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_credit_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_credit_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_credit_card_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_credit_card_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere credit_card_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere credit_card_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere credit_card_amount is null\n\n", "column_name": "credit_card_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "credit_card_amount"}}}, "error": null, "status": null, "execution_time": 0.08382511138916016, "thread_id": "Thread-8", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.400665Z", "completed_at": "2020-03-04T16:18:41.456784Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.459265Z", "completed_at": "2020-03-04T16:18:41.459270Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='customer_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_customer_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_customer_id", "resource_type": "test", "alias": "not_null_fct_orders_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.08401107788085938, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.400788Z", "completed_at": "2020-03-04T16:18:41.457817Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.460092Z", "completed_at": "2020-03-04T16:18:41.460097Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='gift_card_amount') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_gift_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_gift_card_amount", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_gift_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_gift_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_gift_card_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_gift_card_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere gift_card_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere gift_card_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere gift_card_amount is null\n\n", "column_name": "gift_card_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "gift_card_amount"}}}, "error": null, "status": null, "execution_time": 0.08446121215820312, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.401021Z", "completed_at": "2020-03-04T16:18:41.458754Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.460884Z", "completed_at": "2020-03-04T16:18:41.460889Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='order_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/not_null_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_order_id", "resource_type": "test", "alias": "not_null_fct_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere order_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere order_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"analytics\".\"test_schema\".\"fct_orders\"\nwhere order_id is null\n\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.04869794845581055, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.464772Z", "completed_at": "2020-03-04T16:18:41.498264Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.509442Z", "completed_at": "2020-03-04T16:18:41.509451Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('fct_orders'), column_name='customer_id', field='customer_id', to=ref('dim_customers')) }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_"], "unique_id": "test.jaffle_shop.relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "original_file_path": "models/marts/core/schema.yml", "name": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "resource_type": "test", "alias": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"], ["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.jaffle_shop.fct_orders", "model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from \"analytics\".\"test_schema\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"analytics\".\"test_schema\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from \"analytics\".\"test_schema\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"analytics\".\"test_schema\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from \"analytics\".\"test_schema\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"analytics\".\"test_schema\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('dim_customers')", "field": "customer_id", "column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.04822683334350586, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.465168Z", "completed_at": "2020-03-04T16:18:41.509141Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.509924Z", "completed_at": "2020-03-04T16:18:41.509931Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('dim_customers'), column_name='customer_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "unique_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/unique_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_dim_customers_customer_id", "resource_type": "test", "alias": "unique_dim_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_dim_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"analytics\".\"test_schema\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"analytics\".\"test_schema\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"analytics\".\"test_schema\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.04863286018371582, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.476640Z", "completed_at": "2020-03-04T16:18:41.511007Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.511828Z", "completed_at": "2020-03-04T16:18:41.511834Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('fct_orders'), column_name='order_id') }}", "database": "analytics", "schema": "test_schema", "fqn": ["jaffle_shop", "schema_test", "unique_fct_orders_order_id"], "unique_id": "test.jaffle_shop.unique_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/drew/fishtown/dbt-docs/ci-project", "path": "schema_test/unique_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_fct_orders_order_id", "resource_type": "test", "alias": "unique_fct_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_fct_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"analytics\".\"test_schema\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"analytics\".\"test_schema\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"analytics\".\"test_schema\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.04840493202209473, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-03-04T16:18:41.487528Z", "completed_at": "2020-03-04T16:18:41.511260Z"}, {"name": "execute", "started_at": "2020-03-04T16:18:41.512114Z", "completed_at": "2020-03-04T16:18:41.512119Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-03-04T16:18:41.602091Z", "elapsed_time": 0.5234110355377197}
>>>>>>> parent of b2999b6... Added overview block for dbt_utils, and generated new docs from ci_project(replaced existing in data/)
