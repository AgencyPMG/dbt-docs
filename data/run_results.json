{"results": [{"node": {"name": "stg_orders", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "staging/stg_orders.sql", "original_file_path": "models/staging/stg_orders.sql", "package_name": "jaffle_shop", "raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_orders') }}\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "refs": [["raw_orders"]], "sources": [], "depends_on": {"nodes": ["seed.jaffle_shop.raw_orders"], "macros": []}, "unique_id": "model.jaffle_shop.stg_orders", "empty": false, "fqn": ["jaffle_shop", "staging", "stg_orders"], "tags": [], "config": {"enabled": true, "materialized": "view", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "stg_orders", "columns": {"order_id": {"name": "order_id", "description": ""}, "status": {"name": "status", "description": ""}}, "description": "", "patch_path": "models/staging/schema.yml", "docrefs": [], "compiled": true, "compiled_sql": "with source as (\n    select * from \"analytics\".\"demo_schema\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"analytics\".\"demo_schema\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": "None", "build_path": "target/compiled/jaffle_shop/staging/stg_orders.sql"}, "error": "Database Error in model stg_orders (models/staging/stg_orders.sql)\n  relation \"demo_schema.raw_orders\" does not exist\n  LINE 3:     select * from \"analytics\".\"demo_schema\".\"raw_orders\"\n                            ^\n  compiled SQL at target/compiled/jaffle_shop/staging/stg_orders.sql", "skip": false, "status": "ERROR", "fail": null, "execution_time": 0.09367799758911133, "thread_id": "Thread-1", "timing": []}, {"node": {"name": "stg_customers", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "staging/stg_customers.sql", "original_file_path": "models/staging/stg_customers.sql", "package_name": "jaffle_shop", "raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_customers') }}\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "refs": [["raw_customers"]], "sources": [], "depends_on": {"nodes": ["seed.jaffle_shop.raw_customers"], "macros": []}, "unique_id": "model.jaffle_shop.stg_customers", "empty": false, "fqn": ["jaffle_shop", "staging", "stg_customers"], "tags": [], "config": {"enabled": true, "materialized": "view", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "stg_customers", "columns": {"customer_id": {"name": "customer_id", "description": ""}}, "description": "", "patch_path": "models/staging/schema.yml", "docrefs": [], "compiled": true, "compiled_sql": "with source as (\n    select * from \"analytics\".\"demo_schema\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"analytics\".\"demo_schema\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": "None", "build_path": "target/compiled/jaffle_shop/staging/stg_customers.sql"}, "error": "Database Error in model stg_customers (models/staging/stg_customers.sql)\n  relation \"demo_schema.raw_customers\" does not exist\n  LINE 3:     select * from \"analytics\".\"demo_schema\".\"raw_customers\"\n                            ^\n  compiled SQL at target/compiled/jaffle_shop/staging/stg_customers.sql", "skip": false, "status": "ERROR", "fail": null, "execution_time": 0.0874171257019043, "thread_id": "Thread-3", "timing": []}, {"node": {"name": "customer_orders", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "marts/core/intermediate/customer_orders.sql", "original_file_path": "models/marts/core/intermediate/customer_orders.sql", "package_name": "jaffle_shop", "raw_sql": "with orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "refs": [["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders"], "macros": []}, "unique_id": "model.jaffle_shop.customer_orders", "empty": false, "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_orders"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "customer_orders", "columns": {}, "description": ""}, "error": null, "skip": true, "status": null, "fail": null, "execution_time": 0, "thread_id": null, "timing": []}, {"node": {"name": "stg_payments", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "staging/stg_payments.sql", "original_file_path": "models/staging/stg_payments.sql", "package_name": "jaffle_shop", "raw_sql": "with source as (\n    \n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_payments') }}\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "refs": [["raw_payments"]], "sources": [], "depends_on": {"nodes": ["seed.jaffle_shop.raw_payments"], "macros": []}, "unique_id": "model.jaffle_shop.stg_payments", "empty": false, "fqn": ["jaffle_shop", "staging", "stg_payments"], "tags": [], "config": {"enabled": true, "materialized": "view", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "stg_payments", "columns": {"payment_id": {"name": "payment_id", "description": ""}, "payment_method": {"name": "payment_method", "description": ""}}, "description": "", "patch_path": "models/staging/schema.yml", "docrefs": [], "compiled": true, "compiled_sql": "with source as (\n    select * from \"analytics\".\"demo_schema\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"analytics\".\"demo_schema\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": "None", "build_path": "target/compiled/jaffle_shop/staging/stg_payments.sql"}, "error": "Database Error in model stg_payments (models/staging/stg_payments.sql)\n  relation \"demo_schema.raw_payments\" does not exist\n  LINE 3:     select * from \"analytics\".\"demo_schema\".\"raw_payments\"\n                            ^\n  compiled SQL at target/compiled/jaffle_shop/staging/stg_payments.sql", "skip": false, "status": "ERROR", "fail": null, "execution_time": 0.10442399978637695, "thread_id": "Thread-2", "timing": []}, {"node": {"name": "customer_payments", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "marts/core/intermediate/customer_payments.sql", "original_file_path": "models/marts/core/intermediate/customer_payments.sql", "package_name": "jaffle_shop", "raw_sql": "with payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"], "macros": []}, "unique_id": "model.jaffle_shop.customer_payments", "empty": false, "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_payments"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "customer_payments", "columns": {}, "description": ""}, "error": null, "skip": true, "status": null, "fail": null, "execution_time": 0, "thread_id": null, "timing": []}, {"node": {"name": "order_payments", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "marts/core/intermediate/order_payments.sql", "original_file_path": "models/marts/core/intermediate/order_payments.sql", "package_name": "jaffle_shop", "raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        {% for payment_method in payment_methods -%}\n        sum(case when payment_method = '{{payment_method}}' then amount else 0 end) as {{payment_method}}_amount,\n        {% endfor -%}\n\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "refs": [["stg_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments"], "macros": []}, "unique_id": "model.jaffle_shop.order_payments", "empty": false, "fqn": ["jaffle_shop", "marts", "core", "intermediate", "order_payments"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "order_payments", "columns": {}, "description": ""}, "error": null, "skip": true, "status": null, "fail": null, "execution_time": 0, "thread_id": null, "timing": []}, {"node": {"name": "fct_customers", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "marts/core/fct_customers.sql", "original_file_path": "models/marts/core/fct_customers.sql", "package_name": "jaffle_shop", "raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\ncustomer_orders as (\n\n    select * from {{ ref('customer_orders') }}\n\n),\n\ncustomer_payments as (\n\n    select * from {{ ref('customer_payments') }}\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "refs": [["stg_customers"], ["customer_orders"], ["customer_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.customer_orders", "model.jaffle_shop.customer_payments"], "macros": []}, "unique_id": "model.jaffle_shop.fct_customers", "empty": false, "fqn": ["jaffle_shop", "marts", "core", "fct_customers"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "fct_customers", "columns": {"customer_id": {"name": "customer_id", "description": "This is a unique identifier for a customer"}, "first_name": {"name": "first_name", "description": "Customer's first name. PII."}, "last_name": {"name": "last_name", "description": "Customer's last name. PII."}, "email": {"name": "email", "description": "Customer's email address. PII."}, "first_order": {"name": "first_order", "description": "Date (UTC) of a customer's first order"}, "most_recent_order": {"name": "most_recent_order", "description": "Date (UTC) of a customer's most recent order"}, "number_of_orders": {"name": "number_of_orders", "description": "Count of the number of orders a customer has placed"}, "total_order_amount": {"name": "total_order_amount", "description": "Total value (AUD) of a customer's orders"}}, "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders", "patch_path": "models/marts/core/schema.yml", "docrefs": []}, "error": null, "skip": true, "status": null, "fail": null, "execution_time": 0, "thread_id": null, "timing": []}, {"node": {"name": "fct_orders", "root_path": "/Users/drew/fishtown/clients/jaffle_shop", "resource_type": "model", "path": "marts/core/fct_orders.sql", "original_file_path": "models/marts/core/fct_orders.sql", "package_name": "jaffle_shop", "raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\norder_payments as (\n\n    select * from {{ ref('order_payments') }}\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        {% for payment_method in payment_methods -%}\n\n        order_payments.{{payment_method}}_amount,\n\n        {% endfor -%}\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "refs": [["stg_orders"], ["order_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.order_payments"], "macros": []}, "unique_id": "model.jaffle_shop.fct_orders", "empty": false, "fqn": ["jaffle_shop", "marts", "core", "fct_orders"], "tags": [], "config": {"enabled": true, "materialized": "table", "pre-hook": [], "post-hook": [], "tags": [], "vars": {}, "column_types": {}, "quoting": {}}, "schema": "demo_schema", "database": "analytics", "alias": "fct_orders", "columns": {"order_id": {"name": "order_id", "description": "This is a unique identifier for an order"}, "customer_id": {"name": "customer_id", "description": "Foreign key to the customers table"}, "order_date": {"name": "order_date", "description": "Date (UTC) that the order was placed"}, "status": {"name": "status", "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |"}, "amount": {"name": "amount", "description": "Total amount (AUD) of the order"}, "credit_card_amount": {"name": "credit_card_amount", "description": "Amount of the order (AUD) paid for by credit card"}, "coupon_amount": {"name": "coupon_amount", "description": "Amount of the order (AUD) paid for by coupon"}, "bank_transfer_amount": {"name": "bank_transfer_amount", "description": "Amount of the order (AUD) paid for by bank transfer"}, "gift_card_amount": {"name": "gift_card_amount", "description": "Amount of the order (AUD) paid for by gift card"}}, "description": "This table has basic information about orders, as well as some derived facts based on payments", "patch_path": "models/marts/core/schema.yml", "docrefs": [{"documentation_package": "", "documentation_name": "orders_status", "column_name": "status"}]}, "error": null, "skip": true, "status": null, "fail": null, "execution_time": 0, "thread_id": null, "timing": []}], "generated_at": "2019-05-03T15:32:16.674501Z", "elapsed_time": 0.5650448799133301}